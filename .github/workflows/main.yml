name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
    tags:
      - "*"
    

env:
  BASE_IMAGE: crosslanguagesoccerframework/rcssserver
  BASE_TAG: latest

jobs:
  app-image:
    runs-on: ubuntu-latest
    name: Build AppImage
    steps:
      - uses: actions/checkout@v4

      - name: Create release folder
        run: |
          mkdir -p ${{ github.workspace }}/artifact

      - name: Find CMakeLists.txt version
        id: cmake_version
        run: |
          cmake_version=$(grep -oP 'project\(.* VERSION \K[0-9]+\.[0-9]+\.[0-9]+' CMakeLists.txt)
          echo "::set-output name=version::${cmake_version}"

      # ------------------------------------------- Ubuntu 20.04 AppImage
      - name: Prepare builder image for 20.04
        run: |
          docker build -t builder-image:2004 -f ./utils/appimage/Dockerfile.builder-2004 .

      - name: Build app image on 20.04
        run: |
          docker run --privileged --name builder-2004 \
            builder-image:2004 /rcssserver/utils/appimage/build_appimage.sh
          docker cp builder-2004:/rcssserver-x86_64.AppImage ${{ github.workspace }}/artifact/rcssserver-x86_64-${{ steps.cmake_version.outputs.version }}.AppImage

      # ------------------------------------------- Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rcssserver-x86_64
          path: ${{ github.workspace }}/artifact/*
          retention-days: 5
          
      - name: List files in artifact directory
        run: ls -l ${{ github.workspace }}/artifact/
        
      - name: Check if there is no release with the same tag
        id: check_release
        run: |
          result=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} -u ${{ secrets.GITHUB_TOKEN }})
          echo "::set-output name=release_exists::$result"

      # ------------------------------------------- Release
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        if: steps.check_release.outputs.release_exists == '404'
        with:
          artifacts: "${{ github.workspace }}/artifact/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "${{ steps.cmake_version.outputs.version }}"
          release_name: "${{ steps.cmake_version.outputs.version }}"
          release_body: "RoboCup Soccer Simulator Server"
          draft: false
          prerelease: false
